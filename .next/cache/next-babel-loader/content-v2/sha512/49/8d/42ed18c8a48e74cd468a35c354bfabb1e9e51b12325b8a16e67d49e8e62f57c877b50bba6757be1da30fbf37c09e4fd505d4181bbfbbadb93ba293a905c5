{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sophia/projects/coffee-grinder-frontend/src/components/Configure/ConfigureCard.tsx\";\nimport { useState } from \"react\";\nimport { ChevronDown, ChevronUp } from \"react-bootstrap-icons\";\nimport styled from \"styled-components\";\nimport { Button } from \"../../elements/Button\";\nimport { Chip } from \"../../elements/Chip\";\nimport { H3 } from \"../../elements/Heading\";\nimport { Inline } from \"../../layout/Inline\";\nimport { Stack } from \"../../layout/Stack\";\nimport { Text } from \"../../elements/Text\";\nimport { COLORS } from \"../../materials/colors\";\nimport { ConfigureHistory } from \"./ConfigureHistory\";\nconst StyledCardContainer = styled(Stack)`\n  min-width: 343px;\n  border-radius: 4px;\n  border: 1px solid #e5e5e5;\n  padding: 16px;\n  padding-left: 30px;\n  background-color: ${COLORS.white};\n`;\nconst StyledGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`;\nexport const ConfigureCard = ({\n  coffee\n}) => {\n  var _coffee$configuration, _coffee$configuration2, _coffee$configuration3;\n\n  const {\n    0: showHistory,\n    1: setShowHistory\n  } = useState(false);\n  return /*#__PURE__*/_jsxDEV(StyledCardContainer, {\n    gap: \"16px\",\n    children: [/*#__PURE__*/_jsxDEV(Inline, {\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(H3, {\n        children: coffee.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chip, {\n        size: \"small\",\n        children: (coffee === null || coffee === void 0 ? void 0 : (_coffee$configuration = coffee.configurations[0]) === null || _coffee$configuration === void 0 ? void 0 : _coffee$configuration.status.toLocaleLowerCase().replace(\"_\", \" \")) || \"none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledGrid, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: \"Grind size\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          color: \"black\",\n          children: (coffee === null || coffee === void 0 ? void 0 : (_coffee$configuration2 = coffee.configurations[0]) === null || _coffee$configuration2 === void 0 ? void 0 : _coffee$configuration2.size) || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [(coffee === null || coffee === void 0 ? void 0 : (_coffee$configuration3 = coffee.configurations[0]) === null || _coffee$configuration3 === void 0 ? void 0 : _coffee$configuration3.amount) || 0, \" sec\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Inline, {\n      gap: \"4px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        color: \"blue\",\n        size: \"12px\",\n        children: \"See history\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        padding: \"0px\",\n        variant: \"icon\",\n        onClick: () => setShowHistory(!showHistory),\n        children: showHistory ? /*#__PURE__*/_jsxDEV(ChevronUp, {\n          size: 20,\n          color: COLORS.black\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(ChevronDown, {\n          size: 20,\n          color: COLORS.black\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), showHistory && /*#__PURE__*/_jsxDEV(ConfigureHistory, {\n      history: coffee === null || coffee === void 0 ? void 0 : coffee.configurations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/home/sophia/projects/coffee-grinder-frontend/src/components/Configure/ConfigureCard.tsx"],"names":["useState","ChevronDown","ChevronUp","styled","Button","Chip","H3","Inline","Stack","Text","COLORS","ConfigureHistory","StyledCardContainer","white","StyledGrid","div","ConfigureCard","coffee","showHistory","setShowHistory","name","configurations","status","toLocaleLowerCase","replace","size","amount","black"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { ChevronDown, ChevronUp } from \"react-bootstrap-icons\";\nimport styled from \"styled-components\";\nimport { Button } from \"../../elements/Button\";\nimport { Chip } from \"../../elements/Chip\";\nimport { H3 } from \"../../elements/Heading\";\nimport { Inline } from \"../../layout/Inline\";\nimport { Stack } from \"../../layout/Stack\";\nimport { Text } from \"../../elements/Text\";\nimport { COLORS } from \"../../materials/colors\";\nimport { Coffee } from \"../Coffee/types\";\nimport { ConfigureHistory } from \"./ConfigureHistory\";\n\nconst StyledCardContainer = styled(Stack)`\n  min-width: 343px;\n  border-radius: 4px;\n  border: 1px solid #e5e5e5;\n  padding: 16px;\n  padding-left: 30px;\n  background-color: ${COLORS.white};\n`;\n\nconst StyledGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`;\n\ntype ConfigureCardProps = {\n  coffee: Coffee;\n};\n\nexport const ConfigureCard: React.FC<ConfigureCardProps> = ({ coffee }) => {\n  const [showHistory, setShowHistory] = useState(false);\n\n  return (\n    <StyledCardContainer gap=\"16px\">\n      <Inline justifyContent=\"space-between\" alignItems=\"center\">\n        <H3>{coffee.name}</H3>\n        <Chip size=\"small\">\n          {coffee?.configurations[0]?.status\n            .toLocaleLowerCase()\n            .replace(\"_\", \" \") || \"none\"}\n        </Chip>\n      </Inline>\n      <StyledGrid>\n        <div>\n          <Text>Grind size</Text>\n          <Text>Amount</Text>\n        </div>\n        <div>\n          <Text color=\"black\">{coffee?.configurations[0]?.size || 0}</Text>\n          <Text>{coffee?.configurations[0]?.amount || 0} sec</Text>\n        </div>\n      </StyledGrid>\n      <Inline gap=\"4px\">\n        <Text color=\"blue\" size=\"12px\">\n          See history\n        </Text>\n        <Button\n          padding=\"0px\"\n          variant=\"icon\"\n          onClick={() => setShowHistory(!showHistory)}\n        >\n          {showHistory ? (\n            <ChevronUp size={20} color={COLORS.black} />\n          ) : (\n            <ChevronDown size={20} color={COLORS.black} />\n          )}\n        </Button>\n      </Inline>\n      {showHistory && <ConfigureHistory history={coffee?.configurations} />}\n    </StyledCardContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}