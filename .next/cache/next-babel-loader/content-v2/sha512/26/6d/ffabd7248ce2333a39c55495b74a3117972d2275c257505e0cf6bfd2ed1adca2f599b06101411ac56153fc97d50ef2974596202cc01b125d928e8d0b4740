{"ast":null,"code":"import _defineProperty from \"/home/sophia/projects/coffee-grinder-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/home/sophia/projects/coffee-grinder-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/sophia/projects/coffee-grinder-frontend/src/elements/Text.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { COLORS } from \"../materials/colors\";\nconst StyledParagraph = styled.p`\n  margin: 0;\n  color: ${({\n  color\n}) => color ? COLORS[color] : \"black\"};\n  font-style: ${({\n  italic\n}) => italic && \"italic\"};\n  line-height: 1.9;\n  font-size: ${({\n  size\n}) => size || \"16px\"};\n  font-weight: ${({\n  bold\n}) => bold ? \"bold\" : \"normal\"};\n  ${props => props.styles}\n`;\n_c = StyledParagraph;\nexport const Text = (_ref) => {\n  let {\n    children,\n    color\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\", \"color\"]);\n\n  return /*#__PURE__*/_jsxDEV(StyledParagraph, _objectSpread(_objectSpread({\n    color: color\n  }, props), {}, {\n    children: children\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Text;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledParagraph\");\n$RefreshReg$(_c2, \"Text\");","map":{"version":3,"sources":["/home/sophia/projects/coffee-grinder-frontend/src/elements/Text.tsx"],"names":["React","styled","COLORS","StyledParagraph","p","color","italic","size","bold","props","styles","Text","children"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAkC,mBAAlC;AACA,SAAiBC,MAAjB,QAA+B,qBAA/B;AAUA,MAAMC,eAAe,GAAGF,MAAM,CAACG,CAAa;AAC5C;AACA,WAAW,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgBA,KAAK,GAAGH,MAAM,CAACG,KAAD,CAAT,GAAmB,OAAS;AAC5D,gBAAgB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgBA,MAAM,IAAI,QAAS;AACnD;AACA,eAAe,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAcA,IAAI,IAAI,MAAO;AAC5C,iBAAiB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,IAAI,GAAG,MAAH,GAAY,QAAU;AAC1D,IAAKC,KAAD,IAAWA,KAAK,CAACC,MAAO;AAC5B,CARA;KAAMP,e;AAUN,OAAO,MAAMQ,IAAyB,GAAG,UAAmC;AAAA,MAAlC;AAAEC,IAAAA,QAAF;AAAYP,IAAAA;AAAZ,GAAkC;AAAA,MAAZI,KAAY;;AAC1E,sBACE,QAAC,eAAD;AAAiB,IAAA,KAAK,EAAEJ;AAAxB,KAAmCI,KAAnC;AAAA,cACGG;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CANM;MAAMD,I","sourcesContent":["import React from \"react\";\nimport styled, { CSSObject } from \"styled-components\";\nimport { Colors, COLORS } from \"../materials/colors\";\n\ntype TextProps = {\n  color?: Colors;\n  italic?: boolean;\n  size?: \"12px\" | \"16px\" | \"18px\" | \"20px\";\n  styles?: CSSObject;\n  bold?: boolean;\n};\n\nconst StyledParagraph = styled.p<TextProps>`\n  margin: 0;\n  color: ${({ color }) => (color ? COLORS[color] : \"black\")};\n  font-style: ${({ italic }) => italic && \"italic\"};\n  line-height: 1.9;\n  font-size: ${({ size }) => size || \"16px\"};\n  font-weight: ${({ bold }) => (bold ? \"bold\" : \"normal\")};\n  ${(props) => props.styles}\n`;\n\nexport const Text: React.FC<TextProps> = ({ children, color, ...props }) => {\n  return (\n    <StyledParagraph color={color} {...props}>\n      {children}\n    </StyledParagraph>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}