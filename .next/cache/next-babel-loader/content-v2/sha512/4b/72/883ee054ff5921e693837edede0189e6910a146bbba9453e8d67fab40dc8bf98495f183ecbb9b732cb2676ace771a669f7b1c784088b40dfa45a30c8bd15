{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sophia/projects/coffee-grinder-frontend/src/components/Rating/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { Star, StarFill } from \"react-bootstrap-icons\";\nimport { Button } from \"../../elements/Button\";\nimport { Inline } from \"../../layout/Inline\";\nexport const Rating = ({\n  maxRating,\n  rating = 0,\n  onClick\n}) => {\n  _s();\n\n  const ratingArray = useMemo(() => new Array(maxRating).fill(0), [maxRating]);\n  const {\n    0: _,\n    1: forceRerender\n  } = useState(0);\n  useEffect(() => {\n    forceRerender(rating);\n  }, [rating]);\n  return /*#__PURE__*/_jsxDEV(Inline, {\n    gap: \"4px\",\n    children: ratingArray.map((_, index) => index < rating ? /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"icon\",\n      disabled: !onClick,\n      onClick: () => {\n        onClick && onClick(index + 1);\n      },\n      children: /*#__PURE__*/_jsxDEV(StarFill, {\n        size: 15\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"icon\",\n      disabled: !onClick,\n      onClick: () => {\n        onClick && onClick(index + 1);\n      },\n      children: /*#__PURE__*/_jsxDEV(Star, {\n        size: 15\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Rating, \"GEm5Xf/BxTmFatR1oxeqMjEyfvI=\");\n\n_c = Rating;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rating\");","map":{"version":3,"sources":["/home/sophia/projects/coffee-grinder-frontend/src/components/Rating/index.tsx"],"names":["React","useEffect","useMemo","useState","Star","StarFill","Button","Inline","Rating","maxRating","rating","onClick","ratingArray","Array","fill","_","forceRerender","map","index"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,QAApC,QAAoD,OAApD;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,uBAA/B;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AAQA,OAAO,MAAMC,MAA6B,GAAG,CAAC;AAC5CC,EAAAA,SAD4C;AAE5CC,EAAAA,MAAM,GAAG,CAFmC;AAG5CC,EAAAA;AAH4C,CAAD,KAIvC;AAAA;;AACJ,QAAMC,WAAW,GAAGV,OAAO,CAAC,MAAM,IAAIW,KAAJ,CAAUJ,SAAV,EAAqBK,IAArB,CAA0B,CAA1B,CAAP,EAAqC,CAACL,SAAD,CAArC,CAA3B;AACA,QAAM;AAAA,OAACM,CAAD;AAAA,OAAIC;AAAJ,MAAqBb,QAAQ,CAAC,CAAD,CAAnC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,aAAa,CAACN,MAAD,CAAb;AACD,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;AAIA,sBACE,QAAC,MAAD;AAAQ,IAAA,GAAG,EAAC,KAAZ;AAAA,cACGE,WAAW,CAACK,GAAZ,CAAgB,CAACF,CAAD,EAAIG,KAAJ,KACfA,KAAK,GAAGR,MAAR,gBACE,QAAC,MAAD;AAEE,MAAA,OAAO,EAAC,MAFV;AAGE,MAAA,QAAQ,EAAE,CAACC,OAHb;AAIE,MAAA,OAAO,EAAE,MAAM;AACbA,QAAAA,OAAO,IAAIA,OAAO,CAACO,KAAK,GAAG,CAAT,CAAlB;AACD,OANH;AAAA,6BAQE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA;AARF,OACOA,KADP;AAAA;AAAA;AAAA;AAAA,YADF,gBAYE,QAAC,MAAD;AAEE,MAAA,OAAO,EAAC,MAFV;AAGE,MAAA,QAAQ,EAAE,CAACP,OAHb;AAIE,MAAA,OAAO,EAAE,MAAM;AACbA,QAAAA,OAAO,IAAIA,OAAO,CAACO,KAAK,GAAG,CAAT,CAAlB;AACD,OANH;AAAA,6BAQE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAE;AAAZ,SAAqBA,KAArB;AAAA;AAAA;AAAA;AAAA;AARF,OACOA,KADP;AAAA;AAAA;AAAA;AAAA,YAbH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAzCM;;GAAMV,M;;KAAAA,M","sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\nimport { Star, StarFill } from \"react-bootstrap-icons\";\nimport { Button } from \"../../elements/Button\";\nimport { Inline } from \"../../layout/Inline\";\n\ninterface RatingProps {\n  maxRating: number;\n  rating?: number;\n  onClick?: (value: number) => Promise<void> | void;\n}\n\nexport const Rating: React.FC<RatingProps> = ({\n  maxRating,\n  rating = 0,\n  onClick,\n}) => {\n  const ratingArray = useMemo(() => new Array(maxRating).fill(0), [maxRating]);\n  const [_, forceRerender] = useState(0);\n\n  useEffect(() => {\n    forceRerender(rating);\n  }, [rating]);\n\n  return (\n    <Inline gap=\"4px\">\n      {ratingArray.map((_, index) =>\n        index < rating ? (\n          <Button\n            key={index}\n            variant=\"icon\"\n            disabled={!onClick}\n            onClick={() => {\n              onClick && onClick(index + 1);\n            }}\n          >\n            <StarFill size={15} />\n          </Button>\n        ) : (\n          <Button\n            key={index}\n            variant=\"icon\"\n            disabled={!onClick}\n            onClick={() => {\n              onClick && onClick(index + 1);\n            }}\n          >\n            <Star size={15} key={index} />\n          </Button>\n        )\n      )}\n    </Inline>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}