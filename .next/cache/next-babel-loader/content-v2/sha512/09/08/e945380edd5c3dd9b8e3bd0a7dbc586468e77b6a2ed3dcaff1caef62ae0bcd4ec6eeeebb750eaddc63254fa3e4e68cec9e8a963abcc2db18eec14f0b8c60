{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sophia/projects/coffee-grinder-frontend/src/components/Grind/GrindAmount.tsx\";\nimport React from \"react\";\nimport { ArrowDownCircleFill, ArrowUpCircleFill } from \"react-bootstrap-icons\";\nimport styled from \"styled-components\";\nimport { Button } from \"../../elements/Button\";\nimport { Inline } from \"../../layout/Inline\";\nimport { Input } from \"../../elements/Input\";\nimport { Text } from \"../../elements/Text\";\nimport { useConfiguration } from \"../Configure/useConfiguration\";\nconst StyledGrid = styled.div`\n  width: 100%;\n  padding: 0 12px;\n  display: grid;\n  grid-template-columns: 2fr 2fr 1fr 1fr;\n  align-items: center;\n`;\nexport const GrindAmount = () => {\n  const {\n    amount,\n    configure\n  } = useConfiguration();\n\n  const handleUpdateGrind = type => {\n    const newAmount = type === \"up\" ? amount + 0.5 : amount - 0.5;\n    configure(\"amount\", newAmount);\n  };\n\n  const handleInputGrind = newValue => {\n    configure(\"amount\", Number(newValue) || 0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledGrid, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      children: \"Amount\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Inline, {\n      gap: \"12px\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        width: \"60px\",\n        label: \"\",\n        value: amount ? amount.toFixed(1) : 0.0,\n        type: \"number\",\n        onChange: newValue => handleInputGrind(newValue)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: \"sec\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"icon\",\n      onClick: () => handleUpdateGrind(\"down\"),\n      children: /*#__PURE__*/_jsxDEV(ArrowDownCircleFill, {\n        size: 28\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"icon\",\n      onClick: () => handleUpdateGrind(\"up\"),\n      children: /*#__PURE__*/_jsxDEV(ArrowUpCircleFill, {\n        size: 28\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/home/sophia/projects/coffee-grinder-frontend/src/components/Grind/GrindAmount.tsx"],"names":["React","ArrowDownCircleFill","ArrowUpCircleFill","styled","Button","Inline","Input","Text","useConfiguration","StyledGrid","div","GrindAmount","amount","configure","handleUpdateGrind","type","newAmount","handleInputGrind","newValue","Number","toFixed"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,EAA8BC,iBAA9B,QAAuD,uBAAvD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,SAASC,IAAT,QAAqB,qBAArB;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AAEA,MAAMC,UAAU,GAAGN,MAAM,CAACO,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA,CANA;AAUA,OAAO,MAAMC,WAAuC,GAAG,MAAM;AAC3D,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAwBL,gBAAgB,EAA9C;;AAEA,QAAMM,iBAAiB,GAAIC,IAAD,IAAyB;AACjD,UAAMC,SAAS,GAAGD,IAAI,KAAK,IAAT,GAAgBH,MAAM,GAAG,GAAzB,GAA+BA,MAAM,GAAG,GAA1D;AACAC,IAAAA,SAAS,CAAC,QAAD,EAAWG,SAAX,CAAT;AACD,GAHD;;AAKA,QAAMC,gBAAgB,GAAIC,QAAD,IAAsB;AAC7CL,IAAAA,SAAS,CAAC,QAAD,EAAWM,MAAM,CAACD,QAAD,CAAN,IAAoB,CAA/B,CAAT;AACD,GAFD;;AAIA,sBACE,QAAC,UAAD;AAAA,4BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAC,MAAZ;AAAmB,MAAA,UAAU,EAAC,QAA9B;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,KAAK,EAAC,EAFR;AAGE,QAAA,KAAK,EAAEN,MAAM,GAAGA,MAAM,CAACQ,OAAP,CAAe,CAAf,CAAH,GAAuB,GAHtC;AAIE,QAAA,IAAI,EAAC,QAJP;AAKE,QAAA,QAAQ,EAAGF,QAAD,IAAcD,gBAAgB,CAACC,QAAD;AAL1C;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAYE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAuB,MAAA,OAAO,EAAE,MAAMJ,iBAAiB,CAAC,MAAD,CAAvD;AAAA,6BACE,QAAC,mBAAD;AAAqB,QAAA,IAAI,EAAE;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF,eAeE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAuB,MAAA,OAAO,EAAE,MAAMA,iBAAiB,CAAC,IAAD,CAAvD;AAAA,6BACE,QAAC,iBAAD;AAAmB,QAAA,IAAI,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAjCM","sourcesContent":["import React from \"react\";\nimport { ArrowDownCircleFill, ArrowUpCircleFill } from \"react-bootstrap-icons\";\nimport styled from \"styled-components\";\nimport { Button } from \"../../elements/Button\";\nimport { Inline } from \"../../layout/Inline\";\nimport { Input } from \"../../elements/Input\";\nimport { Text } from \"../../elements/Text\";\nimport { useConfiguration } from \"../Configure/useConfiguration\";\n\nconst StyledGrid = styled.div`\n  width: 100%;\n  padding: 0 12px;\n  display: grid;\n  grid-template-columns: 2fr 2fr 1fr 1fr;\n  align-items: center;\n`;\n\ntype GrindAmountProps = {};\n\nexport const GrindAmount: React.FC<GrindAmountProps> = () => {\n  const { amount, configure } = useConfiguration();\n\n  const handleUpdateGrind = (type: \"up\" | \"down\") => {\n    const newAmount = type === \"up\" ? amount + 0.5 : amount - 0.5;\n    configure(\"amount\", newAmount);\n  };\n\n  const handleInputGrind = (newValue: number) => {\n    configure(\"amount\", Number(newValue) || 0);\n  };\n\n  return (\n    <StyledGrid>\n      <Text>Amount</Text>\n      <Inline gap=\"12px\" alignItems=\"center\">\n        <Input\n          width=\"60px\"\n          label=\"\"\n          value={amount ? amount.toFixed(1) : 0.0}\n          type=\"number\"\n          onChange={(newValue) => handleInputGrind(newValue as number)}\n        />\n        <Text>sec</Text>\n      </Inline>\n      <Button variant=\"icon\" onClick={() => handleUpdateGrind(\"down\")}>\n        <ArrowDownCircleFill size={28} />\n      </Button>\n      <Button variant=\"icon\" onClick={() => handleUpdateGrind(\"up\")}>\n        <ArrowUpCircleFill size={28} />\n      </Button>\n    </StyledGrid>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}