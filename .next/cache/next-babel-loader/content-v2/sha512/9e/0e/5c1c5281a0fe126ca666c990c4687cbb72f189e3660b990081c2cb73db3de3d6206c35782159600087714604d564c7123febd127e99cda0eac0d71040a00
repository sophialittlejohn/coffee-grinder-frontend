{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sophia/projects/coffee-grinder-frontend/src/elements/Modal.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { COLORS } from \"../materials/colors\";\nimport { Button } from \"./Button\";\nimport Portal from \"./Portal\";\nimport { Stack } from \"../layout/Stack\";\nconst ModalContent = styled(Stack)`\n  position: absolute;\n  top: 0;\n  background: ${COLORS.black};\n  color: white;\n  height: 100%;\n  width: 70%;\n  padding: 16px;\n  box-shadow: 4px 0px 11px -5px rgba(0, 0, 0, 0.75);\n`;\nexport const Modal = ({\n  disclosure,\n  isOpen,\n  setIsOpen,\n  children,\n  disabled = false\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      disabled: disabled,\n      variant: \"icon\",\n      onClick: () => setIsOpen(!isOpen),\n      children: disclosure\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(Portal, {\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};","map":{"version":3,"sources":["/home/sophia/projects/coffee-grinder-frontend/src/elements/Modal.tsx"],"names":["React","styled","COLORS","Button","Portal","Stack","ModalContent","black","Modal","disclosure","isOpen","setIsOpen","children","disabled"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AASA,MAAMC,YAAY,GAAGL,MAAM,CAACI,KAAD,CAAQ;AACnC;AACA;AACA,gBAAgBH,MAAM,CAACK,KAAM;AAC7B;AACA;AACA;AACA;AACA;AACA,CATA;AAWA,OAAO,MAAMC,KAA2B,GAAG,CAAC;AAC1CC,EAAAA,UAD0C;AAE1CC,EAAAA,MAF0C;AAG1CC,EAAAA,SAH0C;AAI1CC,EAAAA,QAJ0C;AAK1CC,EAAAA,QAAQ,GAAG;AAL+B,CAAD,KAMrC;AACJ,sBACE;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,QAAQ,EAAEA,QADZ;AAEE,MAAA,OAAO,EAAC,MAFV;AAGE,MAAA,OAAO,EAAE,MAAMF,SAAS,CAAC,CAACD,MAAF,CAH1B;AAAA,gBAKGD;AALH;AAAA;AAAA;AAAA;AAAA,YADF,EAQGC,MAAM,iBACL,QAAC,MAAD;AAAA,6BACE,QAAC,YAAD;AAAA,kBAAeE;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA,kBADF;AAgBD,CAvBM","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { COLORS } from \"../materials/colors\";\nimport { Button } from \"./Button\";\nimport Portal from \"./Portal\";\nimport { Stack } from \"../layout/Stack\";\n\ntype ModalProps = {\n  disclosure: any;\n  isOpen: boolean;\n  disabled?: boolean;\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nconst ModalContent = styled(Stack)`\n  position: absolute;\n  top: 0;\n  background: ${COLORS.black};\n  color: white;\n  height: 100%;\n  width: 70%;\n  padding: 16px;\n  box-shadow: 4px 0px 11px -5px rgba(0, 0, 0, 0.75);\n`;\n\nexport const Modal: React.FC<ModalProps> = ({\n  disclosure,\n  isOpen,\n  setIsOpen,\n  children,\n  disabled = false,\n}) => {\n  return (\n    <>\n      <Button\n        disabled={disabled}\n        variant=\"icon\"\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        {disclosure}\n      </Button>\n      {isOpen && (\n        <Portal>\n          <ModalContent>{children}</ModalContent>\n        </Portal>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}