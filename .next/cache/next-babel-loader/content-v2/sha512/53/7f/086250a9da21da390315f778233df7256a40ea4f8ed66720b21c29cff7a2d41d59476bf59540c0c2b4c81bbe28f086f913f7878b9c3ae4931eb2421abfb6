{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/home/sophia/projects/coffee-grinder-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/home/sophia/projects/coffee-grinder-frontend/src/components/Configure/useConfiguration.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState } from \"react\";\nconst defaultConfigurations = {\n  amount: 0,\n  size: 0,\n  status: \"NONE\"\n};\n\nconst defaultConfigureContext = _objectSpread(_objectSpread({}, defaultConfigurations), {}, {\n  configure: (type, value) => undefined\n});\n\nconst ConfigurationContext = /*#__PURE__*/React.createContext(defaultConfigureContext);\nexport const ConfigurationProvider = props => {\n  _s();\n\n  const {\n    0: amount,\n    1: setAmount\n  } = useState(props.amount || defaultConfigurations.amount);\n  const {\n    0: size,\n    1: setSize\n  } = useState(props.size || defaultConfigurations.size);\n  const {\n    0: status,\n    1: setStatus\n  } = useState(props.status || defaultConfigurations.status || \"NONE\");\n\n  const configure = (type, value) => {\n    switch (type) {\n      case \"size\":\n        setSize(value);\n        break;\n\n      case \"amount\":\n        setAmount(value);\n        break;\n\n      case \"status\":\n        setStatus(value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ConfigurationContext.Provider, {\n    value: {\n      amount,\n      size,\n      status,\n      configure\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ConfigurationProvider, \"aKDa2ucrjN3d/USjIbgPQf/Q6so=\");\n\n_c = ConfigurationProvider;\nexport const useConfiguration = () => {\n  _s2();\n\n  const context = useContext(ConfigurationContext);\n  return context;\n};\n\n_s2(useConfiguration, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfigurationProvider\");","map":{"version":3,"sources":["/home/sophia/projects/coffee-grinder-frontend/src/components/Configure/useConfiguration.tsx"],"names":["React","useContext","useState","defaultConfigurations","amount","size","status","defaultConfigureContext","configure","type","value","undefined","ConfigurationContext","createContext","ConfigurationProvider","props","setAmount","setSize","setStatus","children","useConfiguration","context"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AAaA,MAAMC,qBAAoC,GAAG;AAC3CC,EAAAA,MAAM,EAAE,CADmC;AAE3CC,EAAAA,IAAI,EAAE,CAFqC;AAG3CC,EAAAA,MAAM,EAAE;AAHmC,CAA7C;;AAMA,MAAMC,uBAAyC,mCAC1CJ,qBAD0C;AAE7CK,EAAAA,SAAS,EAAE,CAACC,IAAD,EAAOC,KAAP,KAAiBC;AAFiB,EAA/C;;AAKA,MAAMC,oBAAoB,gBAAGZ,KAAK,CAACa,aAAN,CAAoBN,uBAApB,CAA7B;AAEA,OAAO,MAAMO,qBAA8C,GAAIC,KAAD,IAAW;AAAA;;AACvE,QAAM;AAAA,OAACX,MAAD;AAAA,OAASY;AAAT,MAAsBd,QAAQ,CAClCa,KAAK,CAACX,MAAN,IAAgBD,qBAAqB,CAACC,MADJ,CAApC;AAGA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOY;AAAP,MAAkBf,QAAQ,CAACa,KAAK,CAACV,IAAN,IAAcF,qBAAqB,CAACE,IAArC,CAAhC;AACA,QAAM;AAAA,OAACC,MAAD;AAAA,OAASY;AAAT,MAAsBhB,QAAQ,CAClCa,KAAK,CAACT,MAAN,IAAgBH,qBAAqB,CAACG,MAAtC,IAAgD,MADd,CAApC;;AAIA,QAAME,SAAS,GAAG,CAACC,IAAD,EAAeC,KAAf,KAA0C;AAC1D,YAAQD,IAAR;AACE,WAAK,MAAL;AACEQ,QAAAA,OAAO,CAACP,KAAD,CAAP;AACA;;AACF,WAAK,QAAL;AACEM,QAAAA,SAAS,CAACN,KAAD,CAAT;AACA;;AACF,WAAK,QAAL;AACEQ,QAAAA,SAAS,CAACR,KAAD,CAAT;AARJ;AAUD,GAXD;;AAaA,sBACE,QAAC,oBAAD,CAAsB,QAAtB;AAA+B,IAAA,KAAK,EAAE;AAAEN,MAAAA,MAAF;AAAUC,MAAAA,IAAV;AAAgBC,MAAAA,MAAhB;AAAwBE,MAAAA;AAAxB,KAAtC;AAAA,cACGO,KAAK,CAACI;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA3BM;;GAAML,qB;;KAAAA,qB;AA6Bb,OAAO,MAAMM,gBAAgB,GAAG,MAAM;AAAA;;AACpC,QAAMC,OAAO,GAAGpB,UAAU,CAACW,oBAAD,CAA1B;AACA,SAAOS,OAAP;AACD,CAHM;;IAAMD,gB","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { Status } from \"./types\";\n\ntype Configuration = {\n  amount: number;\n  size: number;\n  status?: Status;\n};\n\ninterface ConfigureContext extends Configuration {\n  configure: (type: keyof Configuration, value: number | Status) => void;\n}\n\nconst defaultConfigurations: Configuration = {\n  amount: 0,\n  size: 0,\n  status: \"NONE\",\n};\n\nconst defaultConfigureContext: ConfigureContext = {\n  ...defaultConfigurations,\n  configure: (type, value) => undefined,\n};\n\nconst ConfigurationContext = React.createContext(defaultConfigureContext);\n\nexport const ConfigurationProvider: React.FC<Configuration> = (props) => {\n  const [amount, setAmount] = useState(\n    props.amount || defaultConfigurations.amount\n  );\n  const [size, setSize] = useState(props.size || defaultConfigurations.size);\n  const [status, setStatus] = useState<Status>(\n    props.status || defaultConfigurations.status || \"NONE\"\n  );\n\n  const configure = (type: string, value: number | Status) => {\n    switch (type) {\n      case \"size\":\n        setSize(value as number);\n        break;\n      case \"amount\":\n        setAmount(value as number);\n        break;\n      case \"status\":\n        setStatus(value as Status);\n    }\n  };\n\n  return (\n    <ConfigurationContext.Provider value={{ amount, size, status, configure }}>\n      {props.children}\n    </ConfigurationContext.Provider>\n  );\n};\n\nexport const useConfiguration = () => {\n  const context = useContext(ConfigurationContext);\n  return context;\n};\n"]},"metadata":{},"sourceType":"module"}